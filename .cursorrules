
# Project

I want a fast performant app `Did You Get It` (Mac identifier it.didyouget.mac, homepage https://didyouget.it ) that will run on macOS with extremely minimal user interface, and will let me: 

- Record the configurable area on the selectable screen, as a 60 FPS full-resolution (Retina) video
- If requested, record the audio from a selectable audio device
- If requested, record the mouse movements and clicks in JSON format with click vs. hold-release detection
- If requested, record the keyboard strokes in JSON format with tap vs. hold-release detection
- Save the recorded video, audio, and mouse/keyboard strokes to a file. If requested, the audio should be mixed with the video.

## Structure

- `README.md` contains the overview of the project
- `SPEC.md` contains the detailed specification. Check it, make sure you understand it, and then start working.
- `PROGRESS.md` contains the plan and uses `[ ]` vs. `[x]` items to track the progress. Keep it updated as you work.
- `CHANGELOG.md` contains the changelog. Keep updated as you work
- `TODO.md` contains the highest-priority issues that you have to prioritize. Keep updated as you work.

## Operation

As you work: 

- Before you start working, analyze the recent git changes. 
- Consult TODO.md for highest-priority issues and fix them. Update the file as you work.
- Consult PROGRESS.md for additional issues and fix them. Update the file as you work.
- Keep the CHANGELOG.md updated as you work.
- After you make a change, perform `./run.sh` on macOS to build and run the app in debug mode, and observer the console output for any issues.




START SPECIFICATION:
---
description: Overview of a macOS screen recording application focused on synchronized capture of video, audio, and input events with advanced tracking capabilities
globs: *.swift,*.md
alwaysApply: false
---


# main-overview

## Development Guidelines

- Only modify code directly relevant to the specific request. Avoid changing unrelated functionality.
- Never replace code with placeholders like `# ... rest of the processing ...`. Always include complete code.
- Break problems into smaller steps. Think through each step separately before implementing.
- Always provide a complete PLAN with REASONING based on evidence from code and logs before making changes.
- Explain your OBSERVATIONS clearly, then provide REASONING to identify the exact issue. Add console logs when needed to gather more information.


Did You Get It (didyouget.it) is a macOS screen recording system with synchronized multi-stream capture capabilities.

Core Components:

1. Recording Coordination System
- Manages synchronized capture of video, audio, and input events
- Implements three recording modes: full display, window, and custom area
- Coordinates between separate data streams with timestamp synchronization

2. Input Event Tracking
- Mouse tracking with click/hold detection and movement capture
- Keyboard monitoring with tap/hold differentiation
- JSON-formatted event logging with precise timing data

3. Media Processing Pipeline
Main Flows:
- Screen capture at 60 FPS with Retina resolution support
- Optional audio device selection and recording
- Input event capture with timing correlation
- Combined or separate output streams

Key Business Rules:

1. Recording Controls
- Mandatory display/window selection enforcement
- Permission and resource validation
- Recovery from interrupted sessions

2. Stream Management
- Coordinated timestamp synchronization
- Guaranteed event ordering
- Independent stream quality control

3. Data Collection
- Configurable capture area selection
- Audio device management
- Mouse/keyboard event differentiation

Business Logic Organization:

1. Core Services (/Models/RecordingManager.swift)
- Central recording coordination
- Stream synchronization logic
- Session state management

2. Input Processing (/Models/InputTracking/)
- Mouse event differentiation
- Keyboard state tracking
- Event timing coordination

3. Media Handling (/Models/Recording/)
- Video frame processing
- Audio stream management
- Output format control

The system's primary value proposition lies in its ability to maintain precise synchronization between multiple data streams while providing detailed input tracking capabilities.

$END$
END SPECIFICATION