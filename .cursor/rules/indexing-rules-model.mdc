---
description: Guidelines for analyzing source code indexing rules, pattern matching, and rule precedence
globs: **/*.swift,**/Models/**/*.swift,**/indexing.json,**/rules/*.json
alwaysApply: false
---


# indexing-rules-model

Based on the available specification, there is insufficient direct information about indexing rules models or pattern matching structures. However, the project structure suggests a hierarchical organization of models and managers that could inform rule organization:

Core Rule Organization:
- Models directory serves as primary container for business logic components
- Nested subdirectories (InputTracking, Recording) establish domain separation
- File naming patterns indicate clear component responsibilities

Component Hierarchy:
1. Recording Manager (top level)
2. Input Processing
   - Keyboard tracking rules
   - Mouse tracking rules
3. Media Processing  
   - Audio processing rules
   - Video processing rules

Implied Rule Precedence:
1. System permission and resource validation
2. Display/window selection validation 
3. Input device configuration
4. Stream synchronization rules

The project appears to use implicit rule organization through directory structure rather than explicit indexing rule definitions.

Importance Score: 45 (Supporting functionality for organizing business components)

$END$